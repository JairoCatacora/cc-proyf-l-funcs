org: fruit
service: producto

provider:
  name: aws
  runtime: nodejs20.x
  memorySize: 1024
  timeout: 30
  iam:
    role: ${env:LAB_ROLE_ARN}
  environment:
    PRODUCTS_TABLE_NAME: pf_productos

functions:
  crear_producto:
    handler: CrearProducto.lambda_handler
    events:
      - http:
          path: /product/create
          method: post
          cors: true
          integration: lambda

  listar_productos:
    handler: ListarProductos.lambda_handler
    events:
      - http:
          path: /product/list
          method: get
          cors: true
          integration: lambda

  actualizar_producto:
    handler: ActualizarProducto.lambda_handler
    events:
      - http:
          path: /product/update
          method: patch
          cors: true
          integration: lambda

  buscar_producto:
    handler: BuscarProducto.lambda_handler
    events:
      - http:
          path: /product/search
          method: get
          cors: true
          integration: lambda

  eliminar_producto:
    handler: EliminarProducto.lambda_handler
    events:
      - http:
          path: /product/delete
          method: delete
          cors: true
          integration: lambda

resources:
  Resources:
    ProductTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
          - AttributeName: product_id
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
          - AttributeName: product_id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST