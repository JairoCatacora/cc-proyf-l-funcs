org: fruit
service: api-customization

provider:
  name: aws
  runtime: python3.12
  memorySize: 1024
  timeout: 30
  iam:
    role: arn:aws:iam::943073974505:role/LabRole
  environment:
    CUSTOMIZATIONS_TABLE: t_customizations
    LOGO_BUCKET: dev-multishop-logos
    BUCKET_NAME: dev-multishop-logos


functions:
  getCustomization:
    handler: getCustomization.lambda_handler
    events:
      - http:
          path: /customization/{tenant_id}
          method: get
          cors: true
          integration: lambda

  updateCustomization:
    handler: updateCustomization.lambda_handler
    events:
      - http:
          path: /customization/{tenant_id}
          method: patch
          cors: true
          integration: lambda

  createCustomization:
    handler: createCustomization.lambda_handler
    events:
      - http:
          path: /customization
          method: post
          cors: true
          integration: lambda

  deleteCustomization:
    runtime: nodejs22.x
    handler: deleteCustomization.lambda_handler
    events:
      - http:
          path: /customization/{tenant_id}
          method: delete
          cors: true
          integration: lambda

  uploadLogo:
    handler: uploadLogo.lambda_handler
    events:
      - http:
          path: /customization/upload-logo
          method: post
          cors: true
          integration: lambda

  getTenantLogos:
    runtime: nodejs22.x
    handler: getTenantLogos.lambda_handler
    events:
      - http:
          path: /customization/list-logos
          method: get
          cors: true
          integration: lambda

resources:
  Resources:
    CustomizationsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.CUSTOMIZATIONS_TABLE}
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    LogoBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.LOGO_BUCKET}
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false