org: fruit
service: login

provider:
  name: aws
  runtime: python3.12	
  memorySize: 1024
  timeout: 30
  iam:
    role: ${env:LAB_ROLE_ARN}
  environment:
    USERS_TABLE_NAME: pf_usuarios
    TOKENS_TABLE_NAME: t_tokens_acceso

functions:
  crear_usuario:
    handler: crear_usuario.lambda_handler
    events:
      - http:
          path: /user/register
          method: post
          cors: true
          integration: lambda

  login_usuario:
    handler: login_usuario.lambda_handler
    events:
      - http:
          path: /user/login
          method: post
          cors: true
          integration: lambda

  validar_token:
    handler: validar_token.lambda_handler
    events:
      - http:
          path: /token/validate
          method: post
          cors: true
          integration: lambda

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.USERS_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
          - AttributeName: user_id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

    TokensTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TOKENS_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: token
            AttributeType: S
        KeySchema:
          - AttributeName: token
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST