openapi: "3.0.0"
info:
  version: "1.0.0"
  title: Pagos Management API
  description: API para administrar pagos, crear, listar, y buscar.

host: "api.payments.com"
basePath: "/v1"
schemes:
  - https
paths:
  /payments/create:
    post:
      summary: Crear un pago
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReq'
      responses:
        201:
          description: Payment successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResp'
        404:
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /payments/list:
    get:
      summary: Listar pagos por tenant o user
      parameters:
        - name: tenant_id
          in: query
          required: false
          schema:
            type: string
        - name: user_id
          in: query
          required: false
          schema:
            type: string
      responses:
        200:
          description: Payments listed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResp'
        404:
          description: No payments found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /payments/search:
    get:
      summary: Buscar un pagos
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: string
        - name: pago_id
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: Payment found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagoResp'
        404:
          description: Payment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /pago/delete:
    delete:
      summary: Eliminar un pago
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteReq'
      responses:
        200:
          description: Payment successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResp'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    CreateReq:
      type: object
      properties:
        tenant_id:
          type: string
        pago_id:
          type: string
        order_id:
          type: string
        user_id:
          type: string
        user_info:
          type: object
      required:
        - tenant_id
        - pago_id
        - order_id
        - user_id

    CreateResp:
      type: object
      properties:
        message:
          type: string
          example: "Pago creado exitosamente"
        payment_id:
          type: string

    ListResp:
      type: object
      properties:
        message:
          type: string
          example: "Pagos listados exitosamente"
        pagos:
          type: array
          items:
            $ref: '#/components/schemas/PagoResp'

    PagoResp:
      type: object
      properties:
        tenant_id:
          type: string
        pago_id:
          type: string
        order_id:
          type: string
        user_id:
          type: string
        total:
          type: number
        fecha_pago:
          type: string
        user_info:
          type: object

    DeleteReq:
      type: object
      properties:
        tenant_id:
          type: string
        pago_id:
          type: string
      required:
        - tenant_id
        - pago_id

    DeleteResp:
      type: object
      properties:
        message:
          type: string
          example: "Payment deleted successfully"

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: "An error occurred"
